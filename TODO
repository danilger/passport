+ создать в бд таблицы для ролевой модели User, Role, Permission
+ разобраться с миграциями (повторить ролик из рутуба)
+ создать crud для всех Асущностей
+ подключить passport js
+ добавить защиту на роуты

+ во все сервисы нужно добавить try catch чтобы на фронт возвращался корректный ответ об ошибке

+ при удалении Permission возникает ошибка из за связанных таблиц, нужно будет придумать как это исправить, возможно нужно будет применить каскадное удаление или удлять свзяи отдельно

+ добавить документацию к api

+ добавить базовую роль admin, которая будет добавляться в базу при первом запуске приложения если ее там нет

+ нужно ввести ограничение на удаление пользователя с правами администратора, пользователь с ролью администратор нельзя удалить через api

+ добавить api для смены пароля
+ добавить валидацию на входные параметры
+ добавить гвард который проверяет права доступа к ресурсам
+ добавить дефолтные права доступа к ресурсам в базу данных при первом запуске приложения (если их там нет) и присвоить роди admi
+ протестировать в ручном режиме гвард который проверяет права доступа к ресурсам

+ создать тестовое окружение для end to end тестов для проверки работы API через HTTP запросы (использовать нативный fetch из node)

Сценарии тестирования:

 1. Тестирование начального состояния системы:
   + Проверка автоматического создания admin пользователя
   + Проверка создания базовых ролей и разрешений
   + Успешная аутентификация admin пользователя

 2. Тестирование операций администратора:
   - Создание тестового пользователя user
   - Создание тестовой роли testRole
   - Назначение разрешений для testRole
   - Назначение роли testRole пользователю user
   - Проверка корректности назначенных прав
   - Аутентификация user1
   - Проверка доступных разрешений
   - Попытки доступа к разрешенным ресурсам
   - Попытки доступа к запрещенным ресурсам
   - Работа с собственным профилем
   - Проверка ограничений доступа

- 3. Тестирование безопасности:
   - Попытки доступа без авторизации
   - Попытки доступа с истекшими cookies
   - Попытки доступа к ресурсам без необходимых разрешений
   - Проверка механизма обновления токенов
   - Тестирование logout

- 5. Тестирование граничных случаев:
   - Обработка некорректных данных в запросах
   - Проверка валидации входных данных
   - Тестирование обработки ошибок
   - Проверка ограничений на удаление административных пользователей

- внедрить мультитенантность

- параметры api для получения списка должны быть совместимы с react-admin

- добавить кэширование
- добавить логирование

- ! logout не удаляет refresh токен из кук браузера
