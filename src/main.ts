import { NestFactory, Reflector } from '@nestjs/core';
import { AppModule } from './app.module';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import * as cookieParser from 'cookie-parser';
import {
  ClassSerializerInterceptor,
  Logger,
  ValidationPipe,
} from '@nestjs/common';
import * as fs from 'fs';
import * as path from 'path';

async function bootstrap() {
  // –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—ã–π –ª–æ–≥–≥–µ—Ä
  const logger = new Logger('App');

  // –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º –ª–æ–≥–≥–µ—Ä–æ–º
  const app = await NestFactory.create(AppModule, {
    logger: ['error', 'warn', 'log'],
    bufferLogs: false,
  });
  // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º CORS –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º
  app.enableCors({
    origin: 'http://127.0.0.1:5173', // URL –Ω–∞—à–µ–≥–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH'],
    allowedHeaders: ['Content-Type', 'Authorization', 'Cookie', ],
    credentials: true, // –†–∞–∑—Ä–µ—à–∞–µ–º –ø–µ—Ä–µ–¥–∞—á—É –∫—É–∫
    exposedHeaders: ['Set-Cookie'], // –ü–æ–∑–≤–æ–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç—É –≤–∏–¥–µ—Ç—å Set-Cookie –∑–∞–≥–æ–ª–æ–≤–∫–∏
  });

  // –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é
  app.useGlobalPipes(
    new ValidationPipe({
      transform: true, // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –ø—Ä–∏–º–∏—Ç–∏–≤—ã –≤ –Ω—É–∂–Ω—ã–π —Ç–∏–ø (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç—Ä–æ–∫—É '1' –≤ —á–∏—Å–ª–æ 1)
      whitelist: true, // –£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∏–º–µ—é—Ç –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤ DTO
      forbidNonWhitelisted: false, // –ù–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –ª–∏—à–Ω–∏—Ö —Å–≤–æ–π—Å—Ç–≤ (–ø—Ä–æ—Å—Ç–æ —É–¥–∞–ª—è–µ—Ç –∏—Ö)
      stopAtFirstError: true, // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –Ω–∞–π–¥–µ–Ω–Ω–æ–π –æ—à–∏–±–∫–µ
      validationError: {
        target: false, // –ù–µ –≤–∫–ª—é—á–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Å –æ—à–∏–±–∫–æ–π –≤ –æ—Ç–≤–µ—Ç –æ–± –æ—à–∏–±–∫–µ
        value: false, // –ù–µ –≤–∫–ª—é—á–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π –≤ –æ—Ç–≤–µ—Ç –æ–± –æ—à–∏–±–∫–µ
      },
      transformOptions: {
        enableImplicitConversion: true, // –í–∫–ª—é—á–∞–µ—Ç –Ω–µ—è–≤–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–∏–ø–æ–≤
        exposeDefaultValues: true, // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–∑ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤
      },
      disableErrorMessages: false, // –†–∞–∑—Ä–µ—à–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö –∫–ª–∏–µ–Ω—Ç—É
    }),
  );

  // –í–∫–ª—é—á–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—é –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–∫–ª—é—á–µ–Ω–∏—è @Exclude() –ø–æ–ª–µ–π –∏–∑ –æ—Ç–≤–µ—Ç–æ–≤
  app.useGlobalInterceptors(new ClassSerializerInterceptor(app.get(Reflector)));

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Swagger
  const config = new DocumentBuilder()
    .setTitle('Passport API')
    .setDescription(
      'API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, —Ä–æ–ª—è–º–∏ –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏\n\n' +
        '–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è OpenAPI –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON: [openapi.json](/api/openapi.json)',
    )
    .setVersion('1.0')
    .addTag('app', '–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–µ')
    .addTag('auth', '–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è')
    .addTag('user', '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏')
    .addTag('role', '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏')
    .addTag('permission', '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏')
    .addCookieAuth('access_token')
    .build();

  const document = SwaggerModule.createDocument(app, config);

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—é –≤ JSON —Ñ–∞–π–ª
  const outputPath = path.resolve(process.cwd(), 'openapi.json');
  fs.writeFileSync(outputPath, JSON.stringify(document, null, 2), {
    encoding: 'utf8',
  });

  // –°–æ–∑–¥–∞–µ–º GET —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è openapi.json
  app.getHttpAdapter().get('/api/openapi.json', (req, res) => {
    res.header('Content-Type', 'application/json');
    res.send(document);
  });

  SwaggerModule.setup('api/docs', app, document);

  app.use(cookieParser());  // –ü–æ–¥–∫–ª—é—á–∞–µ–º middleware –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ cookies, –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å req.cookies –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö –∑–∞–ø—Ä–æ—Å–æ–≤

  const port = process.env.PORT ?? 3000;
  await app.listen(port);

  logger.log(`üöÄ Application is running on: http://localhost:${port}`);
  logger.log(`üìö Swagger documentation: http://localhost:${port}/api/docs`);
}

bootstrap().catch((error) => {
  console.error('‚ùå Error starting application:', error);
  process.exit(1);
});
