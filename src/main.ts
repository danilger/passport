import { NestFactory, Reflector } from '@nestjs/core';
import { AppModule } from './app.module';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import * as cookieParser from 'cookie-parser';
import { ClassSerializerInterceptor, Logger } from '@nestjs/common';
import * as fs from 'fs';
import * as path from 'path';

async function bootstrap() {
  // –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—ã–π –ª–æ–≥–≥–µ—Ä
  const logger = new Logger('App');
  
  // –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º –ª–æ–≥–≥–µ—Ä–æ–º
  const app = await NestFactory.create(AppModule, {
    logger: ['error', 'warn', 'log', 'debug', 'verbose'],
    bufferLogs: true
  });
  
  // –í–∫–ª—é—á–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—é –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–∫–ª—é—á–µ–Ω–∏—è @Exclude() –ø–æ–ª–µ–π –∏–∑ –æ—Ç–≤–µ—Ç–æ–≤
  app.useGlobalInterceptors(new ClassSerializerInterceptor(app.get(Reflector)));
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Swagger
  const config = new DocumentBuilder()
    .setTitle('Passport API')
    .setDescription(
      'API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, —Ä–æ–ª—è–º–∏ –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏\n\n' +
      '–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è OpenAPI –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON: [openapi.json](/api/openapi.json)',
    )
    .setVersion('1.0')
    .addTag('app', '–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–µ')
    .addTag('auth', '–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è')
    .addTag('users', '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏')
    .addTag('roles', '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏')
    .addTag('permissions', '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏')
    .addCookieAuth('access_token')
    .build();

  const document = SwaggerModule.createDocument(app, config);
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—é –≤ JSON —Ñ–∞–π–ª
  const outputPath = path.resolve(process.cwd(), 'openapi.json');
  fs.writeFileSync(outputPath, JSON.stringify(document, null, 2), { encoding: 'utf8' });
  
  // –°–æ–∑–¥–∞–µ–º GET —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è openapi.json
  app.getHttpAdapter().get('/api/openapi.json', (req, res) => {
    res.header('Content-Type', 'application/json');
    res.send(document);
  });
  
  SwaggerModule.setup('api/docs', app, document);

  app.use(cookieParser());
  
  const port = process.env.PORT ?? 3000;
  await app.listen(port);
  
  logger.log(`üöÄ Application is running on: http://localhost:${port}`);
  logger.log(`üìö Swagger documentation: http://localhost:${port}/api/docs`);
  
  if (process.env.NODE_ENV === 'development') {
    logger.debug('üõ†Ô∏è Application running in development mode');
  }
}

bootstrap().catch((error) => {
  console.error('‚ùå Error starting application:', error);
  process.exit(1);
});
